/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    media: Media;
    records: Record;
    artists: Artist;
    genres: Genre;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    'site-settings': SiteSetting;
  };
}
export interface User {
  id: number;
  name?: string | null;
  role: 'admin' | 'user';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface Media {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
export interface Record {
  id: number;
  title: string;
  slug?: string | null;
  artist: (number | Artist)[];
  label?: string | null;
  genres: (number | Genre)[];
  releaseYear?: string | null;
  imageUrl?: string | null;
  useCustomImage?: boolean | null;
  image?: number | Media | null;
  collectionStatus?: ('own' | 'want' | 'like') | null;
  favouriteTracks?:
    | {
        title: string;
        notes?: string | null;
        id?: string | null;
      }[]
    | null;
  createdBy?: (number | null) | User;
  themeColor?: string | null;
  content?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  content_html?: string | null;
  status?: ('draft' | 'published') | null;
  updatedAt: string;
  createdAt: string;
}
export interface Artist {
  id: number;
  name: string;
  slug?: string | null;
  genres?: (number | Genre)[] | null;
  imageUrl?: string | null;
  themeColor?: string | null;
  useCustomImage?: boolean | null;
  image?: number | Media | null;
  discogsBio?: string | null;
  hideDiscogsBio?: boolean | null;
  content?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  content_html?: string | null;
  status?: ('draft' | 'published') | null;
  updatedAt: string;
  createdAt: string;
}
export interface Genre {
  id: number;
  title: string;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface SiteSetting {
  id: number;
  title: string;
  description: string;
  logo: number | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}