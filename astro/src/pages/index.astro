---
import RecordImage from '@/components/RecordImage.astro';
import Layout from '@/layouts/Layout.astro';
import { getSiteSettings } from '@/utils/payload/globals';
import { getRandomRecords } from '@/utils/payload/record';

const records = await getRandomRecords();

const { title: siteTitle } = await getSiteSettings();
---

<Layout title="Home">
  <h1
    class="heading-text-shadow relative z-10 -mb-[.3em] animate-fade-in-drop-down text-center text-6xl font-black text-[#d5d5d5] opacity-0 mix-blend-exclusion dark:text-[#f8f8f8] sm:text-left md:text-center md:text-8xl"
    transition:animate="fade"
  >
    {siteTitle}
  </h1>

  <section class="flex flex-wrap justify-center">
    {
      records?.length > 0 &&
        records.map((record) => {
          return (
            <div
              class="record w-1/2 flex-grow-0 animate-fade-in-scale opacity-0 md:w-1/4"
              transition:name={`record-${record.id}`}
            >
              <a href={`/records/${record.slug}`}>
                <div class="overflow-hidden">
                  <RecordImage
                    record={record}
                    class="aspect-square h-full w-full object-cover transition-all duration-500"
                    loading="eager"
                  />
                </div>
              </a>
            </div>
          );
        })
    }
    <div
      class="mt-8 w-full text-center font-mono tracking-tighter sm:text-right"
    >
      <a href="/records" class="text-black dark:text-[#f8f8f8]">View all >></a>
    </div>
  </section>
</Layout>

<style>
  .record:is(:hover, :focus) img {
    transform: scale(1.02);
    filter: invert(1);
  }
</style>
