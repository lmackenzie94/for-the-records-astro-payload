---
import { getRecords, getRecordsBySimilarGenre } from '@/utils/payload/record';

import Layout from '@/layouts/Layout.astro';
import RecordArtists from '@/components/RecordArtists.astro';
import type { InferGetStaticParamsType } from 'astro';
import type {
  Artist as ArtistType,
  Record as RecordType,
  Genre
} from '@/types';
import Artist from '@/components/Artist.astro';
import Record from '@/components/Record.astro';

// TODO: how to get type hints...?

export async function getStaticPaths() {
  const records = await getRecords();

  const paths = records.map((record) => ({
    params: { slug: record.slug?.toString() },
    props: { record }
  }));

  return paths;
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;

interface Props {
  record: RecordType;
}

const { slug } = Astro.params as Params;
const { record } = Astro.props;

const releaseYear = new Date(record.releaseDate).getFullYear();
const artists: ArtistType[] = record.artist;
const genres: Genre[] = record.genres;

const similarRecords = await getRecordsBySimilarGenre(record);
---

<Layout title={record.title}>
  <section class="grid grid-cols-12 gap-4">
    <div class="col-span-full flex flex-col md:col-span-10">
      <h1
        class="relative z-10 -mb-6 ml-4 text-7xl font-black text-[#dcdcdc] mix-blend-exclusion"
        transition:name={`heading`}
      >
        {record.title}
      </h1>
      <div class="mb-8 flex gap-6">
        <div class="w-1/4 flex-grow-0">
          <div
            class="overflow-hidden rounded-sm"
            transition:name={`record-${record.id}`}
          >
            <img
              src={record.image.url}
              alt="Record Cover"
              class="aspect-square w-full object-cover"
            />
          </div>
        </div>
        <div class="mt-16 flex flex-col justify-between">
          <div class="font-mono text-sm">
            <p>
              <span class="font-mono font-bold tracking-tighter text-gray-light"
                >Artist:
              </span>
              <RecordArtists record={record} class="hocus:underline" />
            </p>
            <p>
              <span class="font-mono font-bold tracking-tighter text-gray-light"
                >Year:
              </span>{releaseYear}
            </p>
            {
              record.label && (
                <p>
                  <span class="font-mono font-bold tracking-tighter text-gray-light">
                    Label:{' '}
                  </span>
                  {record.label}
                </p>
              )
            }
            {
              genres && (
                <p>
                  <span class="font-mono font-bold tracking-tighter text-gray-light">
                    Genre(s):{' '}
                  </span>
                  {genres.map((genre) => genre.title).join(', ')}
                </p>
              )
            }
          </div>
        </div>
      </div>

      <div class="max-w-[70ch]">
        <h2 class="mb-3 text-2xl font-bold text-armyGreen">About</h2>
        <p>
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas
          veritatis repudiandae id eos laborum sint quod. Quae quas ea
          architecto, quam totam exercitationem aliquam reiciendis obcaecati
          corporis at officia quod est non modi! Libero culpa accusamus
          necessitatibus, quae doloribus totam minima veritatis mollitia illum
          recusandae quas reiciendis nisi eos provident obcaecati.
        </p><p>
          Sapiente mollitia ad dolores non debitis necessitatibus velit amet,
          reprehenderit, quasi magnam labore eaque, pariatur eligendi facere
          cumque obcaecati optio vero. Aliquid atque accusamus voluptatem nisi
          pariatur neque labore. Ex quibusdam praesentium illum, voluptate hic
          tenetur unde. Dolores, laboriosam esse! Iusto excepturi placeat ut
          fugit unde itaque eveniet reprehenderit!
        </p>
      </div>
    </div>

    <aside class="col-span-full md:col-span-2">
      <!-- <h2 class="mb-3 text-2xl font-bold text-gray-light">Records</h2> -->
      <div class="flex gap-5 md:flex-col md:items-end">
        {
          artists.length &&
            artists.map((artist) => (
              <Artist artist={artist} class="max-w-[9rem] flex-1" />
            ))
        }
      </div>
    </aside>
  </section>

  {
    similarRecords?.length > 0 && (
      <section class="mt-16">
        <h2 class="mb-3 text-2xl font-bold text-armyGreen">Similar Records</h2>
        <div class="grid grid-cols-12 gap-4">
          {similarRecords.map((record) => (
            <div class="col-span-3 md:col-span-2">
              <Record record={record} />
            </div>
          ))}
        </div>
      </section>
    )
  }
</Layout>
